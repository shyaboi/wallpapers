{"version":3,"sources":["components/FileServer/img sync nonrecursive /.(png|jpe?g|svg|nef)$","components/FileServer/img/Walls01489254169675.jpg","components/FileServer/img/Walls10Ytel.jpg","components/FileServer/img/Walls11490162808911.png","components/FileServer/img/Walls11490773113520.jpg","components/FileServer/img/Walls11493735596138.jpg","components/FileServer/img/Walls11496867232168.png","components/FileServer/img/Walls11498129336944.jpg","components/FileServer/img/Walls11498495236644.png","components/FileServer/img/Walls11499561496815.jpg","components/FileServer/img/Walls116.jpg","components/FileServer/img/Walls120.jpg","components/FileServer/img/Walls125.jpg","components/FileServer/img/Walls136c197f6928daa71747f678d0dddc297.jpg","components/FileServer/img/Walls15tga80p5u50y.jpg","components/FileServer/img/Walls178badffb60df1aa94872fe0c71ae47eb.jpg","components/FileServer/img/Walls1RJASDrI.jpg","components/FileServer/img/Walls1RJNONOo.jpg","components/FileServer/img/Walls21492050815553.jpg","components/FileServer/img/Walls220200624_200126.jpg","components/FileServer/img/Walls268dd53a71a86171cf7bfc876f5e3a3fd.jpg","components/FileServer/img/Walls278badffb60df1aa94872fe0c71ae47eb.jpg","components/FileServer/img/Walls358.jpg","components/FileServer/img/Walls42020-07-09_13h47_35.png","components/FileServer/img/Walls45.jpg","components/FileServer/img/Walls51499495254408.jpg","components/FileServer/img/Walls56456MUH8694.jpg","components/FileServer/img/Walls576464MUH8555.jpg","components/FileServer/img/Walls61499290980089.jpg","components/FileServer/img/Walls71499029750293.jpg","components/FileServer/img/Walls81491568273687.jpg","components/FileServer/img/Walls91499363874245.jpg","components/thing/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","r","names","require","Donus","console","log","name","src","alt","href","process","port","Navbar","className","style","textDecoration","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bee96850.chunk.js","sourcesContent":["var map = {\n\t\"./Walls01489254169675.jpg\": 12,\n\t\"./Walls10Ytel.jpg\": 13,\n\t\"./Walls11490162808911.png\": 14,\n\t\"./Walls11490773113520.jpg\": 15,\n\t\"./Walls11493735596138.jpg\": 16,\n\t\"./Walls11496867232168.png\": 17,\n\t\"./Walls11498129336944.jpg\": 18,\n\t\"./Walls11498495236644.png\": 19,\n\t\"./Walls11499561496815.jpg\": 20,\n\t\"./Walls116.jpg\": 21,\n\t\"./Walls120.jpg\": 22,\n\t\"./Walls125.jpg\": 23,\n\t\"./Walls136c197f6928daa71747f678d0dddc297.jpg\": 24,\n\t\"./Walls15tga80p5u50y.jpg\": 25,\n\t\"./Walls178badffb60df1aa94872fe0c71ae47eb.jpg\": 26,\n\t\"./Walls1RJASDrI.jpg\": 27,\n\t\"./Walls1RJNONOo.jpg\": 28,\n\t\"./Walls21492050815553.jpg\": 29,\n\t\"./Walls220200624_200126.jpg\": 30,\n\t\"./Walls268dd53a71a86171cf7bfc876f5e3a3fd.jpg\": 31,\n\t\"./Walls278badffb60df1aa94872fe0c71ae47eb.jpg\": 32,\n\t\"./Walls358.jpg\": 33,\n\t\"./Walls42020-07-09_13h47_35.png\": 34,\n\t\"./Walls45.jpg\": 35,\n\t\"./Walls51499495254408.jpg\": 36,\n\t\"./Walls56456MUH8694.jpg\": 37,\n\t\"./Walls576464MUH8555.jpg\": 38,\n\t\"./Walls61499290980089.jpg\": 39,\n\t\"./Walls71499029750293.jpg\": 40,\n\t\"./Walls81491568273687.jpg\": 41,\n\t\"./Walls91499363874245.jpg\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","module.exports = __webpack_public_path__ + \"static/media/Walls01489254169675.647b9ee8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls10Ytel.29ca6ae1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls11490162808911.d02db63e.png\";","module.exports = __webpack_public_path__ + \"static/media/Walls11490773113520.a970b454.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls11493735596138.6ec3c3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls11496867232168.1508b4e3.png\";","module.exports = __webpack_public_path__ + \"static/media/Walls11498129336944.7763530a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls11498495236644.d6743d15.png\";","module.exports = __webpack_public_path__ + \"static/media/Walls11499561496815.a98f4643.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls116.6d369ed9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls120.930a91e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls125.1f37fb57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls136c197f6928daa71747f678d0dddc297.36c197f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls15tga80p5u50y.9ce34ea2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls178badffb60df1aa94872fe0c71ae47eb.78badffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls1RJASDrI.3f161aac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls1RJNONOo.1e61aa61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls21492050815553.34c7c79b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls220200624_200126.48a2d0fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls268dd53a71a86171cf7bfc876f5e3a3fd.68dd53a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls278badffb60df1aa94872fe0c71ae47eb.78badffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls358.6ce02254.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls42020-07-09_13h47_35.addafa3b.png\";","module.exports = __webpack_public_path__ + \"static/media/Walls45.f06a744e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls51499495254408.e8c4f6c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls56456MUH8694.f4c26689.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls576464MUH8555.467948a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls61499290980089.c3e9931f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls71499029750293.aee61ec3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls81491568273687.ec789df4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Walls91499363874245.8aebb9ca.jpg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n// import pic from \"../../images/ok.jpg\";\r\n// import pic2 from \"../../images/ok2.jpg\";\r\n\r\n\r\nfunction importAll(r) {\r\n  return r.keys().map(r);\r\n}\r\n\r\nconst names = importAll(require.context('../FileServer/img', false, /\\.(png|jpe?g|svg|nef)$/));\r\n// const names = [pic, pic2]\r\n\r\n\r\nfunction Donus() {\r\n  console.log(names);\r\n  return (\r\n    <div id=\"wallBox\">\r\n      {names.map((name) => (\r\n        <div id=\"picBox\">\r\n          <img src={name} alt=\"donus\" />{\" \"}\r\n          <div id=\"linkBox\">\r\n            <a href={name}>Original</a>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Donus;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nvar PORT = process.env.port || 4000;\r\nlet server = 'https://f01473e0cd2f.ngrok.io'\r\n// let ping = \"http://localhost:8080/ping\"\r\n// import Home from \"../../components/thing/icons/home.png\";\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\nfunction Navbar() {\r\n  return (\r\n    <nav id=\"nav\" className=\"navbar\" style={{ textDecoration: \"none\" }}>\r\n          <ul id=\"navList\" style={{ textDecoration: \"none\" }}>\r\n            <li style={{ textDecoration: \"none\" }}>Muhalls</li>\r\n            <li><a href={server}>Uplad</a></li>\r\n            {/* <li><a href={ping}>Ping</a></li> */}\r\n\r\n\r\n          </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Donus from '../src/components/thing/index';\r\nimport Navbar from '../src/components/Navbar/index';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <Navbar />\r\n     <Donus />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}